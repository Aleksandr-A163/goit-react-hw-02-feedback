{"version":3,"sources":["Notification/Notification.module.css","Feedback/FeedbackOptions.jsx","Statistics/Statistics.jsx","Notification/Notification.jsx","App.js","index.js","Statistics/Statistics.module.css","Feedback/FeedbackOptions.module.css"],"names":["module","exports","FeedbackOptions","className","style","message","message__title","message__section","this","props","options","map","btn","message_buttons","value","type","onClick","e","onLeaveFeedback","Component","defaultProps","Statistics","good","neutral","bad","total","positivePercentage","styles","statisticsContainer","statistic","Notification","notification","App","state","currentBtnValue","currentTarget","setState","prevState","countTotalFeedback","Object","values","reduce","acc","val","countZero","countPositiveFeedbackPercentage","Math","trunc","btnNames","keys","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,aAAe,qC,mKCG3BC,E,4JASJ,WAAU,IAAD,OACP,OACE,sBAAKC,UAAWC,IAAMC,QAAtB,UACE,oBAAIF,UAAWC,IAAME,eAArB,mCACA,qBAAKH,UAAWC,IAAMG,iBAAtB,SACGC,KAAKC,MAAMC,QAAQC,KAAI,SAAAC,GAAG,OACzB,wBACET,UAAWC,IAAMS,gBACjBC,MAAOF,EAEPG,KAAK,SACLC,QAAS,SAAAC,GAAC,OAAI,EAAKR,MAAMS,gBAAgBD,IAL3C,SAOGL,GAJIA,e,GAlBWO,aAAxBjB,EACGkB,aAAe,CACpBV,QAAS,IA6BER,Q,gBCPAmB,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qBAAIvB,UAAWwB,IAAOC,oBAAtB,UACE,qBAAIzB,UAAWwB,IAAOE,UAAtB,mBAAwCP,KACxC,qBAAInB,UAAWwB,IAAOE,UAAtB,sBAA2CN,KAC3C,qBAAIpB,UAAWwB,IAAOE,UAAtB,kBAAuCL,KACvC,qBAAIrB,UAAWwB,IAAOE,UAAtB,oBAAyCJ,KACzC,qBAAItB,UAAWwB,IAAOE,UAAtB,gCACsBH,EAAqBA,EAAqB,IAAM,S,iBCA7DI,EARM,SAAC,GAAD,IAAGzB,EAAH,EAAGA,QAAH,OACnB,qBAAKF,UAAWwB,IAAOI,aAAvB,SAAsC1B,KCFlC2B,E,4MACJC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPN,gBAAkB,SAAAD,GAChB,IAAMiB,EAAkBjB,EAAEkB,cAAcrB,MACxC,EAAKsB,UAAS,SAAAC,GAAS,kCAClBA,GADkB,kBAEpBH,EAAkBG,EAAUH,GAAmB,Q,EAIpDI,mBAAqB,WAEnB,OADkBC,OAAOC,OAAO,EAAKP,OACpBQ,QAAO,SAACC,EAAKC,GAE5B,OADAD,GAAOC,M,EAIXC,UAAY,WACV,OACsB,IAApB,EAAKX,MAAMX,MACY,IAAvB,EAAKW,MAAMV,SACQ,IAAnB,EAAKU,MAAMT,K,EAOfqB,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKd,MAAMX,KAAO,EAAKgB,qBAAwB,M,4CAGpE,WACE,IAAMU,EAAWT,OAAOU,KAAKzC,KAAKyB,OAClC,OACE,gCACE,yBAASiB,MAAM,6BAAf,SACE,cAAC,EAAD,CACExC,QAASsC,EACT9B,gBAAiBV,KAAKU,oBAG1B,yBAASgC,MAAM,aAAf,SACG1C,KAAKoC,YACJ,cAAC,EAAD,CAAcvC,QAAQ,sBAEtB,cAAC,EAAD,CACEiB,KAAMd,KAAKyB,MAAMX,KACjBC,QAASf,KAAKyB,MAAMV,QACpBC,IAAKhB,KAAKyB,MAAMT,IAChBC,MAAOjB,KAAK8B,qBACZZ,mBAAoBlB,KAAKqC,6C,GAxDrB1B,aAiEHa,I,MCjEfmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BvD,EAAOC,QAAU,CAAC,oBAAsB,wCAAwC,UAAY,gC,kBCA5FD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,eAAiB,wCAAwC,iBAAmB,0CAA0C,gBAAkB,4C","file":"static/js/main.8b40b46f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3a9FP\"};","import style from './FeedbackOptions.module.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass FeedbackOptions extends Component {\n  static defaultProps = {\n    options: [],\n  };\n  static propTypes = {\n    options: PropTypes.array.isRequired,\n    onLeaveFeedback: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <div className={style.message}>\n        <h1 className={style.message__title}>Please leave feedback</h1>\n        <div className={style.message__section}>\n          {this.props.options.map(btn => (\n            <button\n              className={style.message_buttons}\n              value={btn}\n              key={btn}\n              type=\"button\"\n              onClick={e => this.props.onLeaveFeedback(e)}\n            >\n              {btn}\n            </button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FeedbackOptions;\n","import React from 'react';\n\nimport { PropTypes } from 'prop-types';\n\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul className={styles.statisticsContainer}>\n      <li className={styles.statistic}>Good: {good}</li>\n      <li className={styles.statistic}>Neutral: {neutral}</li>\n      <li className={styles.statistic}>Bad: {bad}</li>\n      <li className={styles.statistic}>Total: {total}</li>\n      <li className={styles.statistic}>\n        Positive feedback: {positivePercentage ? positivePercentage + '%' : 0}\n      </li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\n\nimport { PropTypes } from 'prop-types';\n\nimport styles from './Notification.module.css';\n\nconst Notification = ({ message }) => (\n  <div className={styles.notification}>{message}</div>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport FeedbackOptions from './Feedback/FeedbackOptions';\nimport Statistics from './Statistics/Statistics';\nimport Notification from './Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = e => {\n    const currentBtnValue = e.currentTarget.value;\n    this.setState(prevState => ({\n      ...prevState,\n      [currentBtnValue]: prevState[currentBtnValue] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const valuesArr = Object.values(this.state);\n    return valuesArr.reduce((acc, val) => {\n      acc += val;\n      return acc;\n    });\n  };\n  countZero = () => {\n    if (\n      this.state.good === 0 &&\n      this.state.neutral === 0 &&\n      this.state.bad === 0\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  countPositiveFeedbackPercentage = () => {\n    return Math.trunc((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const btnNames = Object.keys(this.state);\n    return (\n      <div>\n        <section title=\"Please leave your feedback\">\n          <FeedbackOptions\n            options={btnNames}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </section>\n        <section title=\"Statistics\">\n          {this.countZero() ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsContainer\":\"Statistics_statisticsContainer__2uyyY\",\"statistic\":\"Statistics_statistic__nLTO_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"FeedbackOptions_message__264MD\",\"message__title\":\"FeedbackOptions_message__title__3WEWO\",\"message__section\":\"FeedbackOptions_message__section__3VoBV\",\"message_buttons\":\"FeedbackOptions_message_buttons__1g4kT\"};"],"sourceRoot":""}